version: "3"

services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
        - 5672:5672
        - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: rabbitmq
      RABBITMQ_DEFAULT_VHOST: /

  redis_auth_control:
    image: redis:6.2.6
    container_name: "redis_auth_control"
    command: redis-server --requirepass pass
    ports:
        - "6379:6379"
  auth_control:
    build: ./auth-control/.
    container_name: "auth_control_api"
    ports:
        - "3002:80"
    depends_on:
        - redis_auth_control

  postgres-db:
    image: postgres
    container_name: "postgres-db"
    environment:
        - POSTGRES_PASSWORD=pass
        - POSTGRES_USER=user
        - POSTGRES_DB=database
    restart: on-failure
    ports:
        - "5432:5432"

  enroll:
    build: ./enroll/.
    container_name: "enroll"
    ports:
        - "3003:80"
    depends_on:
        - postgres-db

  mongo_espectra:
    image: "mongo"
    container_name: "mongo_espectra"
    restart: on-failure
    environment:
      MONGO_INITDB_DATABASE: spectra
      MONGO_INITDB_ROOT_USERNAME: user
      MONGO_INITDB_ROOT_PASSWORD: pass
    ports:
      - "27017:27017"
    volumes:
      - ./spectra/mongo-scripts/init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

  spectra:
    build: ./spectra/.
    container_name: "spectra_api"
    ports:
        - "3004:80"
    depends_on:
        - mongo_espectra